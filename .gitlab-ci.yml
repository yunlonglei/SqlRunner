image: maven:3.5-jdk-8

stages:
  - build
  - test
  - verify
  - package
  - deploy
  - deploytags



variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  # 打包到快照版
  MAVEN_CLI_OPTS: " -Dmaven.test.skip=true --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  # 打包发布版
  MAVEN_CLI_OPTS_RELEASES: " -Dmaven.test.skip=true --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -Dedition=RELEASE"

cache:
  paths:
    - .m2/repository/
    - target/

build:

  stage: build
  before_script:
    - echo "====================清理========================"
    - time mvn $MAVEN_CLI_OPTS clean
  script:
    - echo "====================编译========================"
    - time mvn $MAVEN_CLI_OPTS compile
  coverage: '/Total.*?([0-9]{1,3})%/'

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=false test
package:
  stage: package
  script:
    - mvn $MAVEN_CLI_OPTS package

verify:
  stage: verify
  script:
    - mvn $MAVEN_CLI_OPTS verify
  artifacts:
    paths:
    - target/*.jar

#打包
deploy:
  stage: deploy
  script:
    - echo "====================清理打包到maven快照仓库========================"
    - mvn $MAVEN_CLI_OPTS clean
    - echo "====================开始打包到maven快照仓库========================"
    - mvn $MAVEN_CLI_OPTS deploy
    - echo "====================结束打包到maven快照仓库========================"
  only:
    - master
#打包发行版
deploytags:
  stage: deploytags
  script:
    - echo "====================清理打包到maven发行仓库========================"
    - mvn $MAVEN_CLI_OPTS_RELEASES clean
    - echo "====================开始打包到maven发行仓库========================"
    - mvn $MAVEN_CLI_OPTS_RELEASES deploy
    - echo "====================结束打包到maven发行仓库========================"
  only:
    - tags
